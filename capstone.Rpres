Prediction algorithm and app based on data collected by HC Corpora  
========================================================
author: Kirill Lebedev
date: 07/13/2016

Used resourses
========================================================
 - Data downloaded from **http://www.corpora.heliohost.org**: corpus includes data from twitter, blogs, news and excludes profanity languege
- The lib for textual data analysis quanteda **https://cran.r-project.org/web/packages/quanteda/index.html** 
- "An Empirical Study of Smoothing Techniques for Languege Modeling" by Stanley F.Chen and Joshua Googman, Center for Research in Computing Technology, Harvard University, Cambridge, Massachusetts. August, 1998.  


Prediction algorithm 
========================================================
 - Corpus is filtred for profanity and sampled (2% of sentences)
 - NGrams are generated with quanteda package
 - NGrams frequency distribution is calculated
 - Kneser-Ney smoothing applied for unigrams, bigrams and tri-grams
 
 Model stats:
 ```{r, warning=FALSE, message=FALSE, echo=FALSE}
 source("model.R")
 model <- load.model()
 ```
 - Unigrams: `r length(model$ngram1$word)`
 - Bigrams: `r length(model$ngram2$word)`
 - Trigrams: `r length(model$ngram3$word)`
 
Shiny app
========================================================
![UI of the shiny app](img/ui.png) 

Shiny app manual
========================================================
 
## Steps to predict words 

 - Open in browser: https://drlebedev.shinyapps.io/capstone/
 - Enter initial text for prediction into input box
 - Check the predict words on right panel

## Limitations

 - Model is based on trigram Kneser-Ney smoothing and generates prediction based on 2 previous words in phrase
 - Real-time update performance depends on network connection
 - Aplication initial load could take several seconds
 